#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
alias please="/usr/bin/sudo "
alias grep="grep --color=always"

# if phpbrew, source
source ~/.phpbrew/bashrc 2> /dev/null

# bitnami path function
# the path is hard-coded, something should be done about that
function bitnami-env() {
  : ${__bitnami_path_is_on:=0}

  if [[ -z "$__bitnami_path" ]]; then
    __bitnami_path=( $(find ~/Servers -type d -name bin | grep -v htdocs) )
  fi

  if [[ "$1" == "off" ]]; then

    path=( ${path:|__bitnami_path} )
    __bitnami_path_is_on=0

  elif [[ $__bitnami_path_is_on == 0 ]]; then

      path=( $__bitnami_path $path )
      __bitnami_path_is_on=1
  fi
}

function sshmount() {

    sshfs "$1" "$2"                                  \
        -o reconnect                                 \
        -o allow_other                               \
        -o uid=$(id -u)                              \
        -o gid=$(id -g)                              \
        -o idmap=user                                \
        -o IdentityFile=${3:="$HOME/.ssh/id_ecdsa"}
}

# Mac OS especific
if [[ "$OSTYPE" == darwin* ]]; then

    # Homebrew
    if type brew &> /dev/null; then

        ( brew update && brew upgrade ) &> /dev/null &!

        dest="/usr/local/share/zsh/site-functions/brew_zsh_completion.zsh"
        target="$(brew --prefix)/Library/Contributions/brew_zsh_completion.zsh"

        if [[ ! -h "$dest" ]]; then
            ln -s "$target" "$dest"
        fi
    else
        url="https://raw.githubusercontent.com/Homebrew/install/master/install"
        (
            ruby -e "$(curl -fsSL "$url" )" &> /dev/null;

            dest="/usr/local/share/zsh/site-functions/brew_zsh_completion.zsh"
            target="$(brew --prefix)/Library/Contributions/brew_zsh_completion.zsh"

            if [[ ! -h "$dest" ]]; then
                ln -s "$target" "$dest"
            fi
        ) &!
    fi

  	# set MANPATH var. The crap about man.conf
  	# has gotten me tired, and I don't see anything in the
  	# mappings that's not already included before in `man --path`
  	# through MANPATH lines, so just set it to whatever `man --path` is
  	if [ -z "$MANPATH" ]; then
  		  MANPATH=$(man --path)
    fi

	# shadow bsd man pages with gnu ones, if findable
  MANPATH="$(find $(brew --prefix) -name man | tr '\n' ':')$MANPATH"
  MANPATH="$(find $(brew --prefix) -name gnuman | tr '\n' ':')$MANPATH"

	export MANPATH

  # following the brew instructions...
  sudo pkill ssh-agent
  eval $(ssh-agent) > /dev/null 2>&1

  # alias it
  alias ressh-agent='sudo pkill ssh-agent; eval $(ssh-agent)'

  function cleanup {
    echo "Killing SSH-Agent"
    kill -9 $SSH_AGENT_PID
  }

  trap cleanup EXIT

  # chrome related
  alias chrome="'/Applications/Google Chrome.app/Contents/MacOS/Google Chrome'"
  alias devdocs="chrome --app=http://devdocs.io"

  # phpbrew related
  phpbrew lookup-prefix homebrew > /dev/null 2>&1

  # set java home
  export JAVA_HOME=$(/usr/libexec/java_home -v 1.8 2> /dev/null)

  # kvm
  source kvm.sh 2> /dev/null

  # nvm
  type nvm &> /dev/null ||                                             \
  {                                                                    \
    git                                                                \
      clone https://github.com/creationix/nvm.git                      \
      $HOME/.nvm                                                       \
      &> /dev/null                                                 &&  \
    cd ~/.nvm                                                      &&  \
    git checkout `git describe --abbrev=0 --tags` &> /dev/null     &&  \
    cd;                                                                \
  }

fi
